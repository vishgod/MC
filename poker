import itertools
from collections import namedtuple
import random

def all_equal(x):
  if len(set(x)) == 1:
    return True
  return False

def all_different(x):
  if len(set(x)) == len(x):
    return True
  return False

def is_consecutive(x):
  x = sorted(x)
  for i in range(len(x)-1):
    if x[i] != x[i+1]-1:
      return False
  return True

def num_matches(x):
  matches = {}
  for i in x:
    if i not in matches.keys():
      matches[i] = 1
    else:
      matches[i] = matches[i]+ 1
  return matches
       

  
    

suits = ["S", "H", "D", "C"]
ranks = ["A", "2", "3", "4", "5", "6", "7", "8", "9", "10", "J", "Q", "K"]
cards = list(itertools.product(ranks, suits))
pocket = list(itertools.combinations(cards, 2))
community = list(itertools.combinations(cards, 5))

sam_card = ["J", "C"]

def rv(card):
  rank = card[0]
  if rank == "J":
    return 11
  elif rank == "Q":
    return 12
  elif rank == "K":
    return 13
  elif rank == "A":
    return 14
  else:
    return int(rank)

def print_card(card):
  # rank = card[0]
  # suit = card[1]
  rank, suit = card[:2]
  if suit == "S":
    suit = "♤"
  if suit == "H":
    suit = "♡"
  if suit == "D":
    suit = "♢"
  if suit == "C": 
    suit = "♧"
  return (rank + suit)
